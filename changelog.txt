/* place any large or controversial changes here*/

11/30/2013:	removed double/multi buffer
	  	- it will be more clear to load all of a site's code and parse from there.
		replaced string_queue w/ utils/string_linked_list

12/05/2013:	added typedef back to urlinfo
	  	- code I just merged depended upon it
	  	- We can change it back if that would be better, though.

12/06/2013:	added utils/parser.[ch]
		crawler_control currently just grabs the whole <a> tag
		needs to be updated to pull just the link

01/01/2013:	merged in branch url_features
		- crawler_control crawls until it runs out of links to check, it hits the max search depth, or it hits the max links to find.
		- generic threaded binary tree and linked list added to utils
		- domain info added to track urls by domain
		- urlinfo now tracks searchdepth
		
		BUG: in crawler_control.c
			occationsally, urls are added to linksfound(binary tree) when they are found multiple times. Likely a problem with either btree_find() or the urlinfo compare function.

01/07/2014:	Made changes in how crawler_control calls parse_all, and which file contains clean_links
		- crawler_control now uses one call to parseall for seed links.
			this returns a linked list of <a> tags and urls in alternating order
		- clean_links puts urls into linkstofind if the corresponding <a> meets the criteria.

<<<<<<< HEAD
01/12/2014:	Fixed few memory leaks and added functions for freeing collections and their elements
		- Memory leaks were caused by not freeing pointers returned from functions
		  ..and from linked lists not being cleared
		- Binarytree and all implementations of linked list now have associated free functions
			These may either free just the collection
			..or the collection, and the data it holds
=======
01/16/2014	Added functions for caching search results
		- These are not implemented in crawler_control.c yet
		- Requires that the folder to hold cached searches be created manually ("mkdir searches")
		- How it works:
			stores a master file listing all cached searches
			eache search is stored as a separate file
			spaces in searches are replaced with underscores
>>>>>>> caching
